---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: workdir
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
#  accessModes:
#  - ReadWriteOnce
#  resources:
#    requests:
#      storage: 1Gi
#  storageClassName: local-path
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: go-client
  name: go-client
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: go-client
  serviceName: go-client
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: go-client
    spec:
      containers:
      - args:
        - tail -f /dev/null
        command:
        - sh
        - -c
        image: mtr.devops.telekom.de/mcsps/golang:1.0.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - ls
            - /tmp
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: go-client
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
            - CAP_NET_RAW
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /.cache
          name: cache
        - mountPath: /go/pkg
          name: pkg
        - mountPath: /home/appuser
          name: workdir
        - mountPath: /tmp
          name: tmp
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
        - 1000
      serviceAccount: go-client
      serviceAccountName: go-client
      terminationGracePeriodSeconds: 1
      volumes:
      - emptyDir:
          sizeLimit: 1000Mi
        name: cache
      - emptyDir:
          sizeLimit: 1000Mi
        name: pkg
      #- emptyDir:
      #    sizeLimit: 1000Mi
      #  name: workdir
      - name: workdir
        persistentVolumeClaim:
          claimName: workdir
      - emptyDir:
          medium: Memory
          sizeLimit: 500Mi
        name: tmp
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: go-client
  name: go-client
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: go-client
  name: go-client
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: go-client
  name: go-client
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: go-client
subjects:
  - kind: ServiceAccount
    name: go-client
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  annotations:
  name: np-go-client
spec:
  egress:
  - {}
  podSelector:
    matchLabels:
      app: go-client
  policyTypes:
  - Egress
